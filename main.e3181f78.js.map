{"version":3,"sources":["scripts/main.js"],"names":["board","score","rows","columns","buttonStart","document","querySelector","restartGame","i","j","cell","getElementById","updateCell","textContent","classList","add","setGame","createElement","id","append","num","filterZero","row","filter","item","slide","newRow","length","remove","push","slideLeft","slideRight","reverse","slideUp","slideDown","hasEmptyCell","setTwo","found","Math","floor","random","gameOver","current","addEventListener","e","key","setTimeout"],"mappings":"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","file":"main.e3181f78.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nlet board;\nlet score = 0;\nconst rows = 4;\nconst columns = 4;\nconst buttonStart = document.querySelector('.start');\n\nbuttonStart.addEventListener('click', () => {\n  restartGame();\n  setTwo();\n  setTwo();\n  document.querySelector('.message-start').classList.add('hidden');\n  document.querySelector('.start').textContent = 'Restart';\n  document.querySelector('.start').classList.add('restart');\n});\n\nfunction restartGame() {\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < columns; j++) {\n      const cell = document.getElementById(`${i}-${j}`);\n\n      board[i][j] = 0;\n\n      const num = board[i][j];\n\n      updateCell(cell, num);\n\n      score = 0;\n\n      document.querySelector('.game-score').textContent = score;\n      document.querySelector('.message-lose').classList.add('hidden');\n    }\n  }\n}\n\nfunction setGame() {\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < columns; j++) {\n      const cell = document.createElement('div');\n\n      cell.id = `${i}-${j}`;\n\n      const num = board[i][j];\n\n      updateCell(cell, num);\n\n      document.querySelector('.game-field').append(cell);\n    }\n  }\n}\n\nfunction updateCell(cell, num) {\n  cell.textContent = '';\n  cell.classList = '';\n  cell.classList.add('field-cell');\n\n  if (num > 0) {\n    cell.textContent = num;\n\n    if (num <= 1024) {\n      cell.classList.add(`field-cell--${num}`);\n    } else {\n      cell.classList.add(`field-cell--2048`);\n    }\n  }\n}\n\ndocument.addEventListener('keyup', (e) => {\n  if (e.key === 'ArrowLeft') {\n    slideLeft();\n    setTwo();\n  } else if (e.key === 'ArrowRight') {\n    slideRight();\n    setTwo();\n  } else if (e.key === 'ArrowUp') {\n    slideUp();\n    setTwo();\n  } else if (e.key === 'ArrowDown') {\n    slideDown();\n    setTwo();\n  }\n\n  document.querySelector('.game-score').textContent = score;\n\n  setTimeout(function() {\n    if (gameOver()) {\n      document.querySelector('.message-lose').classList.remove('hidden');\n    }\n  }, 1000);\n});\n\nfunction filterZero(row) {\n  return row.filter(item => item !== 0);\n}\n\nfunction slide(row) {\n  let newRow = filterZero(row);\n\n  for (let i = 0; i < newRow.length - 1; i++) {\n    if (newRow[i] === newRow[i + 1]) {\n      newRow[i] *= 2;\n      newRow[i + 1] = 0;\n      score += newRow[i];\n    }\n\n    if (newRow[i] === 2048) {\n      document.querySelector('.message-win').classList.remove('hidden');\n    }\n  }\n  newRow = filterZero(newRow);\n\n  while (newRow.length < rows) {\n    newRow.push(0);\n  }\n\n  return newRow;\n}\n\nfunction slideLeft() {\n  for (let i = 0; i < rows; i++) {\n    let row = board[i];\n\n    row = slide(row);\n    board[i] = row;\n\n    for (let j = 0; j < columns; j++) {\n      const cell = document.getElementById(`${i}-${j}`);\n      const num = board[i][j];\n\n      updateCell(cell, num);\n    }\n  }\n}\n\nfunction slideRight() {\n  for (let i = 0; i < rows; i++) {\n    let row = board[i];\n\n    row.reverse();\n\n    row = slide(row);\n    row.reverse();\n    board[i] = row;\n\n    for (let j = 0; j < columns; j++) {\n      const cell = document.getElementById(`${i}-${j}`);\n      const num = board[i][j];\n\n      updateCell(cell, num);\n    }\n  }\n}\n\nfunction slideUp() {\n  for (let i = 0; i < columns; i++) {\n    let row = [board[0][i], board[1][i], board[2][i], board[3][i]];\n\n    row = slide(row);\n\n    for (let j = 0; j < rows; j++) {\n      board[j][i] = row[j];\n\n      const cell = document.getElementById(`${j}-${i}`);\n      const num = board[j][i];\n\n      updateCell(cell, num);\n    }\n  }\n}\n\nfunction slideDown() {\n  for (let i = 0; i < columns; i++) {\n    let row = [board[0][i], board[1][i], board[2][i], board[3][i]];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n\n    for (let j = 0; j < rows; j++) {\n      board[j][i] = row[j];\n\n      const cell = document.getElementById(`${j}-${i}`);\n      const num = board[j][i];\n\n      updateCell(cell, num);\n    }\n  }\n}\n\nfunction hasEmptyCell() {\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < columns; j++) {\n      if (board[i][j] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction setTwo() {\n  if (!hasEmptyCell()) {\n    return;\n  };\n\n  let found = false;\n\n  while (!found) {\n    const i = Math.floor(Math.random() * columns);\n    const j = Math.floor(Math.random() * rows);\n\n    if (board[i][j] === 0) {\n      const cell = document.getElementById(`${i}-${j}`);\n\n      if (Math.random() <= 0.1) {\n        board[i][j] = 4;\n        cell.textContent = '4';\n        cell.classList.add('field-cell--4');\n      } else {\n        board[i][j] = 2;\n        cell.textContent = '2';\n        cell.classList.add('field-cell--2');\n      }\n      found = true;\n    }\n  }\n}\n\nfunction gameOver() {\n  if (hasEmptyCell()) {\n    return false;\n  }\n\n  for (let i = 0; i < columns; i++) {\n    for (let j = 0; j < rows; j++) {\n      const current = board[i][j];\n\n      if ((i + 1 < columns && current === board[i + 1][j])\n      || (j + 1 < rows && current === board[i][j + 1])) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nsetGame();\n"]}